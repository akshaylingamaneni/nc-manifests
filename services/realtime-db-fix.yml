apiVersion: batch/v1
kind: Job
metadata:
  name: realtime-db-fix
  namespace: services
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: psql
          image: postgres:17
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: SUPABASE_DB_PASSWORD
          command: ["sh","-lc"]
          args:
            - |
              set -ex
              CONN="postgresql://postgres:${PGPASSWORD}@supabase-db.services.svc.cluster.local:5432/postgres"
              # Normalize Ecto's schema_migrations table for Realtime
              psql "$CONN" -v ON_ERROR_STOP=1 -c "DO $$ BEGIN
                IF NOT EXISTS (
                  SELECT 1 FROM information_schema.tables WHERE table_schema='public' AND table_name='schema_migrations'
                ) THEN
                  EXECUTE 'CREATE TABLE public.schema_migrations (version bigint PRIMARY KEY, inserted_at timestamp without time zone DEFAULT now())';
                ELSE
                  BEGIN
                    EXECUTE 'ALTER TABLE public.schema_migrations ALTER COLUMN version TYPE bigint USING version::bigint';
                  EXCEPTION WHEN undefined_column THEN
                    EXECUTE 'DROP TABLE public.schema_migrations';
                    EXECUTE 'CREATE TABLE public.schema_migrations (version bigint PRIMARY KEY, inserted_at timestamp without time zone DEFAULT now())';
                  WHEN others THEN
                    EXECUTE 'DROP TABLE public.schema_migrations';
                    EXECUTE 'CREATE TABLE public.schema_migrations (version bigint PRIMARY KEY, inserted_at timestamp without time zone DEFAULT now())';
                  END;
                  IF NOT EXISTS (
                    SELECT 1 FROM information_schema.columns WHERE table_schema='public' AND table_name='schema_migrations' AND column_name='inserted_at'
                  ) THEN
                    EXECUTE 'ALTER TABLE public.schema_migrations ADD COLUMN inserted_at timestamp without time zone DEFAULT now()';
                  END IF;
                END IF;
              END $$;"
              # Optional: ensure publication exists (if you plan to stream changes)
              psql "$CONN" -v ON_ERROR_STOP=1 -c "CREATE PUBLICATION IF NOT EXISTS supabase_realtime FOR ALL TABLES;"

